% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alg_rf_prim.R
\name{rf.prim}
\alias{rf.prim}
\title{RF -> PRIM}
\usage{
rf.prim(dtrain, dtest, box, npts = 1e+05, minpts = 20,
  grow.deep = FALSE)
}
\arguments{
\item{dtrain}{list, containing training data. The first element contains matrix/data frame of real attribute values.
the second element contains vector of labels 0/1.}

\item{dtest}{list, containing test data. Structured in the same way as \code{dtrain}}

\item{box}{matrix of real. Initial hyperbox, covering data}

\item{npts}{number of points to be generated and labeled}

\item{minpts}{integer. Minimal number of points in the box for PRIM to continue peeling}

\item{grow.deep}{logical. If true, criterion \code{minpts} is applied to the newly 
generated dataset, not to the initial one}
}
\value{
list.
\itemize{
\item \code{pr.prob} matrix with coverage (recall) in the first column and 
density (precision) in the second column, evaluated on \code{dtest} and produced
when the new data is labelled with probabilities
\item \code{pr.pred} matrix with coverage (recall) in the first column and 
density (precision) in the second column, evaluated on \code{dtest} and produced
when the new data is labelled with 0/1
\item \code{boxes.prob} list of matrices defining boxes constituting peeling trajectory
when the new data is labelled with probabilities
\item \code{boxes.pred} list of matrices defining boxes constituting peeling trajectory
when the new data is labelled with 0/1
\item \code{tune.par} the best hyperparameter value(s) for random forest, produced with
the default settings of function \code{train} from 'caret' package. 
}
}
\description{
The function learns RF model on a given dataset. Then it generates new points with latin hypercube sampling
and labels them. These new points serve as input for PRIM algorithm.
}
\examples{

dtrain <- dtest <- list()
dtest[[1]] <- dsgc_sym[1001:10000, 1:12]
dtest[[2]] <- dsgc_sym[1001:10000, 13]
dtrain[[1]] <- dsgc_sym[1:500, 1:12]
dtrain[[2]] <- dsgc_sym[1:500, 13]
box <- matrix(c(0.5,0.5,0.5,0.5,1,1,1,1,0.05,0.05,0.05,0.05,
5,5,5,5,4,4,4,4,1,1,1,1), nrow = 2, byrow = TRUE)

set.seed(1)
res.rf <- rf.prim(dtrain = dtrain, dtest = dtest, box = box, grow.deep = TRUE)
res <- norm.prim(dtrain = dtrain, dtest = dtest, box = box)

plot(res.rf[[1]], type = "l", xlim = c(0, 1), ylim = c(0.5, 1),
xlab = "recall", ylab = "precision")
lines(res.rf[[2]], col = "red")
lines(res[[1]], col = "blue")
legend("bottomleft", legend = c("rf prob test", "rf pred test", "norm test"),
col = c("black", "red", "blue"), lty = c(1, 1, 1))
}
\seealso{
\code{\link{norm.prim}},
\code{\link{bagging.prim}}
}
\keyword{models,}
\keyword{multivariate}
