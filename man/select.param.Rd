% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alg_select_alpha_bagging.R
\name{select.param}
\alias{select.param}
\title{optimization of peel.alpha with AUpC}
\usage{
select.param(dtrain, box, minpts = 20, peel.alpha, features, iter = 50)
}
\arguments{
\item{dtrain}{list, containing training data. The first element contains matrix/data frame of real attribute values.
the second element contains vector of labels 0/1.}

\item{box}{matrix of real. Initial hyperbox, covering data}

\item{minpts}{integer. Minimal number of points in the box for PRIM to continue peeling}

\item{peel.alpha}{a set of real. The peeling parameters of PRIM to test from the interval (0,1)}

\item{max.peels}{integer. Maximum length of the peeling trajectory (number of boxes)}

\item{threshold}{real. If precision of the current box on \code{test}
is greater or equal \code{threshold}, PRIM stops peeling}
}
\value{
the optimal value of the peeling parameter from the set
}
\description{
The function chooses one alpha value out of a given set using cross validation
and AUpC as a quality measure
}
\examples{

dtrain <- list()
dtrain[[1]] <- dsgc_sym[1:400, 1:12]
dtrain[[2]] <- dsgc_sym[1:400, 13]
box <- matrix(c(0.5,0.5,0.5,0.5,1,1,1,1,0.05,0.05,0.05,0.05,
5,5,5,5,4,4,4,4,1,1,1,1), nrow = 2, byrow = TRUE)

res <- select.param(dtrain = dtrain, box = box, minpts = 20,
peel.alpha = c(0.17, 0.19), iter = 20, features = c(1,4,12))
}
