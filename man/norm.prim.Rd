% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alg_norm_prim.R
\name{norm.prim}
\alias{norm.prim}
\title{PRIM returning peeling trajectory}
\usage{
norm.prim(
  dtrain,
  dtest = NULL,
  deval = dtrain,
  box,
  minpts = 20,
  max.peels = 999,
  peel.alpha = 0.05,
  pasting = FALSE,
  paste.alpha = 0.01,
  threshold = 1
)
}
\arguments{
\item{dtrain}{list, containing training data. The first element contains matrix/data frame of real attribute values.
the second element contains vector of labels 0/1.}

\item{dtest}{list, containing test data. Structured in the same way as \code{dtrain}}

\item{deval}{list, containing data for evaluation. Structured in the same way as \code{dtrain}.
By default coincides with \code{dtrain}}

\item{box}{matrix of real. Initial hyperbox, covering data}

\item{minpts}{integer. Minimal number of points in the box for PRIM to continue peeling}

\item{max.peels}{integer. Maximum length of the peeling trajectory (number of boxes)}

\item{peel.alpha}{a set of real. The peeling parameter of PRIM from the interval (0,1)}

\item{pasting}{logical. Whether pasting is used on each box forming the peeling trajectory}

\item{paste.alpha}{real. The pasting parameter of PRIM from the interval (0,1)}

\item{threshold}{real. If precision of the current box on \code{test}
is greater or equal \code{threshold}, PRIM stops peeling}
}
\value{
list.
\itemize{
\item \code{pr.test} matrix with coverage (recall) in the first column and
density (precision) in the second column, evaluated on \code{dtest}
\item \code{pr.eval} matrix with coverage (recall) in the first column and
density (precision) in the second column, evaluated on \code{deval}
\item \code{boxes} list of matrices defining boxes constituting peeling trajectory
}
}
\description{
The function applies PRIM to train data and evaluates its quality on test data
}
\examples{

dtrain <- dtest <- list()
dtest[[1]] <- dsgc_sym[1001:10000, 1:12]
dtest[[2]] <- dsgc_sym[1001:10000, 13]
dtrain[[1]] <- dsgc_sym[1:500, 1:12]
dtrain[[2]] <- dsgc_sym[1:500, 13]
box <- matrix(c(0.5,0.5,0.5,0.5,1,1,1,1,0.05,0.05,0.05,0.05,
5,5,5,5,4,4,4,4,1,1,1,1), nrow = 2, byrow = TRUE)

set.seed(1)
res1 <- norm.prim(dtrain = dtrain, dtest = dtest, box = box)
res2 <- norm.prim(dtrain = dtrain, dtest = dtest, box = box, pasting = TRUE)
res3 <- norm.prim(dtrain = dtrain, dtest = dtest, box = box,
peel.alpha = c(0.01, 0.03, 0.05, 0.07, 0.09, 0.11, 0.13, 0.15, 0.17, 0.19))

plot(res3[[1]], col = "green", type = "l")
lines(res2[[1]], col = "blue")
lines(res1[[1]], col = "brown")
}
\references{
Friedman, J.H. and Fisher, N.I. 1999. Bump hunting in high-dimensional data.
Statistics and Computing. 9, 2 (1999), 123-143.
}
\seealso{
\code{\link{rf.prim}},
\code{\link{bagging.prim}}
}
\keyword{models,}
\keyword{multivariate}
